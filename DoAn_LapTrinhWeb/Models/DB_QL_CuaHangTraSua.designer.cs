#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DoAn_LapTrinhWeb.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="db_qlcuahang_ltw")]
	public partial class DB_QL_CuaHangTraSuaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietGioHang(ChiTietGioHang instance);
    partial void UpdateChiTietGioHang(ChiTietGioHang instance);
    partial void DeleteChiTietGioHang(ChiTietGioHang instance);
    partial void InsertToppingDonHang(ToppingDonHang instance);
    partial void UpdateToppingDonHang(ToppingDonHang instance);
    partial void DeleteToppingDonHang(ToppingDonHang instance);
    partial void InsertChiTietHoaDonBanHang(ChiTietHoaDonBanHang instance);
    partial void UpdateChiTietHoaDonBanHang(ChiTietHoaDonBanHang instance);
    partial void DeleteChiTietHoaDonBanHang(ChiTietHoaDonBanHang instance);
    partial void InsertGiamGia(GiamGia instance);
    partial void UpdateGiamGia(GiamGia instance);
    partial void DeleteGiamGia(GiamGia instance);
    partial void InsertGioHang(GioHang instance);
    partial void UpdateGioHang(GioHang instance);
    partial void DeleteGioHang(GioHang instance);
    partial void InsertHoaDonBanHang(HoaDonBanHang instance);
    partial void UpdateHoaDonBanHang(HoaDonBanHang instance);
    partial void DeleteHoaDonBanHang(HoaDonBanHang instance);
    partial void InsertLoaiSanPham(LoaiSanPham instance);
    partial void UpdateLoaiSanPham(LoaiSanPham instance);
    partial void DeleteLoaiSanPham(LoaiSanPham instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertPhanQuyen(PhanQuyen instance);
    partial void UpdatePhanQuyen(PhanQuyen instance);
    partial void DeletePhanQuyen(PhanQuyen instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertSize(Size instance);
    partial void UpdateSize(Size instance);
    partial void DeleteSize(Size instance);
    partial void InsertTopping(Topping instance);
    partial void UpdateTopping(Topping instance);
    partial void DeleteTopping(Topping instance);
        #endregion
        public DB_QL_CuaHangTraSuaDataContext() :
               base(global::System.Configuration.ConfigurationManager.ConnectionStrings["db_qlcuahang_ltwConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }
        public DB_QL_CuaHangTraSuaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_QL_CuaHangTraSuaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_QL_CuaHangTraSuaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_QL_CuaHangTraSuaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ChiTietGioHang> ChiTietGioHangs
		{
			get
			{
				return this.GetTable<ChiTietGioHang>();
			}
		}
		
		public System.Data.Linq.Table<ToppingDonHang> ToppingDonHangs
		{
			get
			{
				return this.GetTable<ToppingDonHang>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietHoaDonBanHang> ChiTietHoaDonBanHangs
		{
			get
			{
				return this.GetTable<ChiTietHoaDonBanHang>();
			}
		}
		
		public System.Data.Linq.Table<GiamGia> GiamGias
		{
			get
			{
				return this.GetTable<GiamGia>();
			}
		}
		
		public System.Data.Linq.Table<GioHang> GioHangs
		{
			get
			{
				return this.GetTable<GioHang>();
			}
		}
		
		public System.Data.Linq.Table<HoaDonBanHang> HoaDonBanHangs
		{
			get
			{
				return this.GetTable<HoaDonBanHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiSanPham> LoaiSanPhams
		{
			get
			{
				return this.GetTable<LoaiSanPham>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<PhanQuyen> PhanQuyens
		{
			get
			{
				return this.GetTable<PhanQuyen>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<Size> Sizes
		{
			get
			{
				return this.GetTable<Size>();
			}
		}
		
		public System.Data.Linq.Table<Topping> Toppings
		{
			get
			{
				return this.GetTable<Topping>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietGioHang")]
	public partial class ChiTietGioHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGioHang;
		
		private string _MaSanPham;
		
		private int _SoLuong;
		
		private string _MaSize;
		
		private System.Nullable<decimal> _ThanhTien;
		
		private EntitySet<ToppingDonHang> _ToppingDonHangs;
		
		private EntityRef<GioHang> _GioHang;
		
		private EntityRef<SanPham> _SanPham;
		
		private EntityRef<Size> _Size;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGioHangChanging(string value);
    partial void OnMaGioHangChanged();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnMaSizeChanging(string value);
    partial void OnMaSizeChanged();
    partial void OnThanhTienChanging(System.Nullable<decimal> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public ChiTietGioHang()
		{
			this._ToppingDonHangs = new EntitySet<ToppingDonHang>(new Action<ToppingDonHang>(this.attach_ToppingDonHangs), new Action<ToppingDonHang>(this.detach_ToppingDonHangs));
			this._GioHang = default(EntityRef<GioHang>);
			this._SanPham = default(EntityRef<SanPham>);
			this._Size = default(EntityRef<Size>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGioHang", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGioHang
		{
			get
			{
				return this._MaGioHang;
			}
			set
			{
				if ((this._MaGioHang != value))
				{
					if (this._GioHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGioHangChanging(value);
					this.SendPropertyChanging();
					this._MaGioHang = value;
					this.SendPropertyChanged("MaGioHang");
					this.OnMaGioHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSize", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSize
		{
			get
			{
				return this._MaSize;
			}
			set
			{
				if ((this._MaSize != value))
				{
					if ((this._SanPham.HasLoadedOrAssignedValue || this._Size.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSizeChanging(value);
					this.SendPropertyChanging();
					this._MaSize = value;
					this.SendPropertyChanged("MaSize");
					this.OnMaSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiTietGioHang_ToppingDonHang", Storage="_ToppingDonHangs", ThisKey="MaSanPham,MaSize,MaGioHang", OtherKey="MaSanPham,MaSize,MaGioHang")]
		public EntitySet<ToppingDonHang> ToppingDonHangs
		{
			get
			{
				return this._ToppingDonHangs;
			}
			set
			{
				this._ToppingDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GioHang_ChiTietGioHang", Storage="_GioHang", ThisKey="MaGioHang", OtherKey="MaGioHang", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GioHang GioHang
		{
			get
			{
				return this._GioHang.Entity;
			}
			set
			{
				GioHang previousValue = this._GioHang.Entity;
				if (((previousValue != value) 
							|| (this._GioHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GioHang.Entity = null;
						previousValue.ChiTietGioHangs.Remove(this);
					}
					this._GioHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietGioHangs.Add(this);
						this._MaGioHang = value.MaGioHang;
					}
					else
					{
						this._MaGioHang = default(string);
					}
					this.SendPropertyChanged("GioHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietGioHang", Storage="_SanPham", ThisKey="MaSanPham,MaSize", OtherKey="MaSanPham,MaSize", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietGioHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietGioHangs.Add(this);
						this._MaSanPham = value.MaSanPham;
						this._MaSize = value.MaSize;
					}
					else
					{
						this._MaSanPham = default(string);
						this._MaSize = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Size_ChiTietGioHang", Storage="_Size", ThisKey="MaSize", OtherKey="MaSize", IsForeignKey=true)]
		public Size Size
		{
			get
			{
				return this._Size.Entity;
			}
			set
			{
				Size previousValue = this._Size.Entity;
				if (((previousValue != value) 
							|| (this._Size.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Size.Entity = null;
						previousValue.ChiTietGioHangs.Remove(this);
					}
					this._Size.Entity = value;
					if ((value != null))
					{
						value.ChiTietGioHangs.Add(this);
						this._MaSize = value.MaSize;
					}
					else
					{
						this._MaSize = default(string);
					}
					this.SendPropertyChanged("Size");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ToppingDonHangs(ToppingDonHang entity)
		{
			this.SendPropertyChanging();
			entity.ChiTietGioHang = this;
		}
		
		private void detach_ToppingDonHangs(ToppingDonHang entity)
		{
			this.SendPropertyChanging();
			entity.ChiTietGioHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ToppingDonHang")]
	public partial class ToppingDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaToppingDonHang;
		
		private string _MaSanPham;
		
		private string _MaSize;
		
		private string _MaHoaDon;
		
		private string _MaGioHang;
		
		private System.Nullable<int> _MaTopping;
		
		private EntityRef<ChiTietGioHang> _ChiTietGioHang;
		
		private EntityRef<ChiTietHoaDonBanHang> _ChiTietHoaDonBanHang;
		
		private EntityRef<Topping> _Topping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaToppingDonHangChanging(int value);
    partial void OnMaToppingDonHangChanged();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnMaSizeChanging(string value);
    partial void OnMaSizeChanged();
    partial void OnMaHoaDonChanging(string value);
    partial void OnMaHoaDonChanged();
    partial void OnMaGioHangChanging(string value);
    partial void OnMaGioHangChanged();
    partial void OnMaToppingChanging(System.Nullable<int> value);
    partial void OnMaToppingChanged();
    #endregion
		
		public ToppingDonHang()
		{
			this._ChiTietGioHang = default(EntityRef<ChiTietGioHang>);
			this._ChiTietHoaDonBanHang = default(EntityRef<ChiTietHoaDonBanHang>);
			this._Topping = default(EntityRef<Topping>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaToppingDonHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaToppingDonHang
		{
			get
			{
				return this._MaToppingDonHang;
			}
			set
			{
				if ((this._MaToppingDonHang != value))
				{
					this.OnMaToppingDonHangChanging(value);
					this.SendPropertyChanging();
					this._MaToppingDonHang = value;
					this.SendPropertyChanged("MaToppingDonHang");
					this.OnMaToppingDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if ((this._ChiTietGioHang.HasLoadedOrAssignedValue || this._ChiTietHoaDonBanHang.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSize", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MaSize
		{
			get
			{
				return this._MaSize;
			}
			set
			{
				if ((this._MaSize != value))
				{
					if ((this._ChiTietGioHang.HasLoadedOrAssignedValue || this._ChiTietHoaDonBanHang.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSizeChanging(value);
					this.SendPropertyChanging();
					this._MaSize = value;
					this.SendPropertyChanged("MaSize");
					this.OnMaSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", DbType="Char(10)")]
		public string MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					if (this._ChiTietHoaDonBanHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGioHang", DbType="Char(10)")]
		public string MaGioHang
		{
			get
			{
				return this._MaGioHang;
			}
			set
			{
				if ((this._MaGioHang != value))
				{
					if (this._ChiTietGioHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGioHangChanging(value);
					this.SendPropertyChanging();
					this._MaGioHang = value;
					this.SendPropertyChanged("MaGioHang");
					this.OnMaGioHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTopping", DbType="Int")]
		public System.Nullable<int> MaTopping
		{
			get
			{
				return this._MaTopping;
			}
			set
			{
				if ((this._MaTopping != value))
				{
					if (this._Topping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaToppingChanging(value);
					this.SendPropertyChanging();
					this._MaTopping = value;
					this.SendPropertyChanged("MaTopping");
					this.OnMaToppingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiTietGioHang_ToppingDonHang", Storage="_ChiTietGioHang", ThisKey="MaSanPham,MaSize,MaGioHang", OtherKey="MaSanPham,MaSize,MaGioHang", IsForeignKey=true, DeleteRule="CASCADE")]
		public ChiTietGioHang ChiTietGioHang
		{
			get
			{
				return this._ChiTietGioHang.Entity;
			}
			set
			{
				ChiTietGioHang previousValue = this._ChiTietGioHang.Entity;
				if (((previousValue != value) 
							|| (this._ChiTietGioHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChiTietGioHang.Entity = null;
						previousValue.ToppingDonHangs.Remove(this);
					}
					this._ChiTietGioHang.Entity = value;
					if ((value != null))
					{
						value.ToppingDonHangs.Add(this);
						this._MaSanPham = value.MaSanPham;
						this._MaSize = value.MaSize;
						this._MaGioHang = value.MaGioHang;
					}
					else
					{
						this._MaSanPham = default(string);
						this._MaSize = default(string);
						this._MaGioHang = default(string);
					}
					this.SendPropertyChanged("ChiTietGioHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiTietHoaDonBanHang_ToppingDonHang", Storage="_ChiTietHoaDonBanHang", ThisKey="MaSanPham,MaSize,MaHoaDon", OtherKey="MaSanPham,MaSize,MaHoaDon", IsForeignKey=true)]
		public ChiTietHoaDonBanHang ChiTietHoaDonBanHang
		{
			get
			{
				return this._ChiTietHoaDonBanHang.Entity;
			}
			set
			{
				ChiTietHoaDonBanHang previousValue = this._ChiTietHoaDonBanHang.Entity;
				if (((previousValue != value) 
							|| (this._ChiTietHoaDonBanHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChiTietHoaDonBanHang.Entity = null;
						previousValue.ToppingDonHangs.Remove(this);
					}
					this._ChiTietHoaDonBanHang.Entity = value;
					if ((value != null))
					{
						value.ToppingDonHangs.Add(this);
						this._MaSanPham = value.MaSanPham;
						this._MaSize = value.MaSize;
						this._MaHoaDon = value.MaHoaDon;
					}
					else
					{
						this._MaSanPham = default(string);
						this._MaSize = default(string);
						this._MaHoaDon = default(string);
					}
					this.SendPropertyChanged("ChiTietHoaDonBanHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Topping_ToppingDonHang", Storage="_Topping", ThisKey="MaTopping", OtherKey="MaTopping", IsForeignKey=true)]
		public Topping Topping
		{
			get
			{
				return this._Topping.Entity;
			}
			set
			{
				Topping previousValue = this._Topping.Entity;
				if (((previousValue != value) 
							|| (this._Topping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Topping.Entity = null;
						previousValue.ToppingDonHangs.Remove(this);
					}
					this._Topping.Entity = value;
					if ((value != null))
					{
						value.ToppingDonHangs.Add(this);
						this._MaTopping = value.MaTopping;
					}
					else
					{
						this._MaTopping = default(Nullable<int>);
					}
					this.SendPropertyChanged("Topping");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietHoaDonBanHang")]
	public partial class ChiTietHoaDonBanHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSanPham;
		
		private string _MaSize;
		
		private string _MaHoaDon;
		
		private int _SoLuong;
		
		private decimal _Gia;
		
		private EntitySet<ToppingDonHang> _ToppingDonHangs;
		
		private EntityRef<HoaDonBanHang> _HoaDonBanHang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnMaSizeChanging(string value);
    partial void OnMaSizeChanged();
    partial void OnMaHoaDonChanging(string value);
    partial void OnMaHoaDonChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnGiaChanging(decimal value);
    partial void OnGiaChanged();
    #endregion
		
		public ChiTietHoaDonBanHang()
		{
			this._ToppingDonHangs = new EntitySet<ToppingDonHang>(new Action<ToppingDonHang>(this.attach_ToppingDonHangs), new Action<ToppingDonHang>(this.detach_ToppingDonHangs));
			this._HoaDonBanHang = default(EntityRef<HoaDonBanHang>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSize", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSize
		{
			get
			{
				return this._MaSize;
			}
			set
			{
				if ((this._MaSize != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSizeChanging(value);
					this.SendPropertyChanging();
					this._MaSize = value;
					this.SendPropertyChanged("MaSize");
					this.OnMaSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					if (this._HoaDonBanHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(10,2) NOT NULL")]
		public decimal Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChiTietHoaDonBanHang_ToppingDonHang", Storage="_ToppingDonHangs", ThisKey="MaSanPham,MaSize,MaHoaDon", OtherKey="MaSanPham,MaSize,MaHoaDon")]
		public EntitySet<ToppingDonHang> ToppingDonHangs
		{
			get
			{
				return this._ToppingDonHangs;
			}
			set
			{
				this._ToppingDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonBanHang_ChiTietHoaDonBanHang", Storage="_HoaDonBanHang", ThisKey="MaHoaDon", OtherKey="MaHoaDon", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HoaDonBanHang HoaDonBanHang
		{
			get
			{
				return this._HoaDonBanHang.Entity;
			}
			set
			{
				HoaDonBanHang previousValue = this._HoaDonBanHang.Entity;
				if (((previousValue != value) 
							|| (this._HoaDonBanHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDonBanHang.Entity = null;
						previousValue.ChiTietHoaDonBanHangs.Remove(this);
					}
					this._HoaDonBanHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonBanHangs.Add(this);
						this._MaHoaDon = value.MaHoaDon;
					}
					else
					{
						this._MaHoaDon = default(string);
					}
					this.SendPropertyChanged("HoaDonBanHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHoaDonBanHang", Storage="_SanPham", ThisKey="MaSanPham,MaSize", OtherKey="MaSanPham,MaSize", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietHoaDonBanHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietHoaDonBanHangs.Add(this);
						this._MaSanPham = value.MaSanPham;
						this._MaSize = value.MaSize;
					}
					else
					{
						this._MaSanPham = default(string);
						this._MaSize = default(string);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ToppingDonHangs(ToppingDonHang entity)
		{
			this.SendPropertyChanging();
			entity.ChiTietHoaDonBanHang = this;
		}
		
		private void detach_ToppingDonHangs(ToppingDonHang entity)
		{
			this.SendPropertyChanging();
			entity.ChiTietHoaDonBanHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiamGia")]
	public partial class GiamGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGG;
		
		private string _TenGG;
		
		private System.DateTime _NgayBD;
		
		private System.DateTime _NgayKT;
		
		private decimal _PhanTramGiam;
		
		private EntitySet<GioHang> _GioHangs;
		
		private EntitySet<HoaDonBanHang> _HoaDonBanHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGGChanging(string value);
    partial void OnMaGGChanged();
    partial void OnTenGGChanging(string value);
    partial void OnTenGGChanged();
    partial void OnNgayBDChanging(System.DateTime value);
    partial void OnNgayBDChanged();
    partial void OnNgayKTChanging(System.DateTime value);
    partial void OnNgayKTChanged();
    partial void OnPhanTramGiamChanging(decimal value);
    partial void OnPhanTramGiamChanged();
    #endregion
		
		public GiamGia()
		{
			this._GioHangs = new EntitySet<GioHang>(new Action<GioHang>(this.attach_GioHangs), new Action<GioHang>(this.detach_GioHangs));
			this._HoaDonBanHangs = new EntitySet<HoaDonBanHang>(new Action<HoaDonBanHang>(this.attach_HoaDonBanHangs), new Action<HoaDonBanHang>(this.detach_HoaDonBanHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGG", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGG
		{
			get
			{
				return this._MaGG;
			}
			set
			{
				if ((this._MaGG != value))
				{
					this.OnMaGGChanging(value);
					this.SendPropertyChanging();
					this._MaGG = value;
					this.SendPropertyChanged("MaGG");
					this.OnMaGGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenGG", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenGG
		{
			get
			{
				return this._TenGG;
			}
			set
			{
				if ((this._TenGG != value))
				{
					this.OnTenGGChanging(value);
					this.SendPropertyChanging();
					this._TenGG = value;
					this.SendPropertyChanged("TenGG");
					this.OnTenGGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBD", DbType="Date NOT NULL")]
		public System.DateTime NgayBD
		{
			get
			{
				return this._NgayBD;
			}
			set
			{
				if ((this._NgayBD != value))
				{
					this.OnNgayBDChanging(value);
					this.SendPropertyChanging();
					this._NgayBD = value;
					this.SendPropertyChanged("NgayBD");
					this.OnNgayBDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKT", DbType="Date NOT NULL")]
		public System.DateTime NgayKT
		{
			get
			{
				return this._NgayKT;
			}
			set
			{
				if ((this._NgayKT != value))
				{
					this.OnNgayKTChanging(value);
					this.SendPropertyChanging();
					this._NgayKT = value;
					this.SendPropertyChanged("NgayKT");
					this.OnNgayKTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhanTramGiam", DbType="Decimal(5,2) NOT NULL")]
		public decimal PhanTramGiam
		{
			get
			{
				return this._PhanTramGiam;
			}
			set
			{
				if ((this._PhanTramGiam != value))
				{
					this.OnPhanTramGiamChanging(value);
					this.SendPropertyChanging();
					this._PhanTramGiam = value;
					this.SendPropertyChanged("PhanTramGiam");
					this.OnPhanTramGiamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiamGia_GioHang", Storage="_GioHangs", ThisKey="MaGG", OtherKey="MaGG")]
		public EntitySet<GioHang> GioHangs
		{
			get
			{
				return this._GioHangs;
			}
			set
			{
				this._GioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiamGia_HoaDonBanHang", Storage="_HoaDonBanHangs", ThisKey="MaGG", OtherKey="MaGG")]
		public EntitySet<HoaDonBanHang> HoaDonBanHangs
		{
			get
			{
				return this._HoaDonBanHangs;
			}
			set
			{
				this._HoaDonBanHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.GiamGia = this;
		}
		
		private void detach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.GiamGia = null;
		}
		
		private void attach_HoaDonBanHangs(HoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.GiamGia = this;
		}
		
		private void detach_HoaDonBanHangs(HoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.GiamGia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GioHang")]
	public partial class GioHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaGioHang;
		
		private int _MaNguoiDung;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private System.Nullable<decimal> _TongTien;
		
		private string _TrangThai;
		
		private string _MaGG;
		
		private EntitySet<ChiTietGioHang> _ChiTietGioHangs;
		
		private EntityRef<GiamGia> _GiamGia;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaGioHangChanging(string value);
    partial void OnMaGioHangChanged();
    partial void OnMaNguoiDungChanging(int value);
    partial void OnMaNguoiDungChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    partial void OnTongTienChanging(System.Nullable<decimal> value);
    partial void OnTongTienChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnMaGGChanging(string value);
    partial void OnMaGGChanged();
    #endregion
		
		public GioHang()
		{
			this._ChiTietGioHangs = new EntitySet<ChiTietGioHang>(new Action<ChiTietGioHang>(this.attach_ChiTietGioHangs), new Action<ChiTietGioHang>(this.detach_ChiTietGioHangs));
			this._GiamGia = default(EntityRef<GiamGia>);
			this._NguoiDung = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGioHang", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaGioHang
		{
			get
			{
				return this._MaGioHang;
			}
			set
			{
				if ((this._MaGioHang != value))
				{
					this.OnMaGioHangChanging(value);
					this.SendPropertyChanging();
					this._MaGioHang = value;
					this.SendPropertyChanged("MaGioHang");
					this.OnMaGioHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNguoiDung", DbType="Int NOT NULL")]
		public int MaNguoiDung
		{
			get
			{
				return this._MaNguoiDung;
			}
			set
			{
				if ((this._MaNguoiDung != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._MaNguoiDung = value;
					this.SendPropertyChanged("MaNguoiDung");
					this.OnMaNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGG", DbType="Char(10)")]
		public string MaGG
		{
			get
			{
				return this._MaGG;
			}
			set
			{
				if ((this._MaGG != value))
				{
					if (this._GiamGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGGChanging(value);
					this.SendPropertyChanging();
					this._MaGG = value;
					this.SendPropertyChanged("MaGG");
					this.OnMaGGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GioHang_ChiTietGioHang", Storage="_ChiTietGioHangs", ThisKey="MaGioHang", OtherKey="MaGioHang")]
		public EntitySet<ChiTietGioHang> ChiTietGioHangs
		{
			get
			{
				return this._ChiTietGioHangs;
			}
			set
			{
				this._ChiTietGioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiamGia_GioHang", Storage="_GiamGia", ThisKey="MaGG", OtherKey="MaGG", IsForeignKey=true)]
		public GiamGia GiamGia
		{
			get
			{
				return this._GiamGia.Entity;
			}
			set
			{
				GiamGia previousValue = this._GiamGia.Entity;
				if (((previousValue != value) 
							|| (this._GiamGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiamGia.Entity = null;
						previousValue.GioHangs.Remove(this);
					}
					this._GiamGia.Entity = value;
					if ((value != null))
					{
						value.GioHangs.Add(this);
						this._MaGG = value.MaGG;
					}
					else
					{
						this._MaGG = default(string);
					}
					this.SendPropertyChanged("GiamGia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_GioHang", Storage="_NguoiDung", ThisKey="MaNguoiDung", OtherKey="MaNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.GioHangs.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.GioHangs.Add(this);
						this._MaNguoiDung = value.MaNguoiDung;
					}
					else
					{
						this._MaNguoiDung = default(int);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietGioHangs(ChiTietGioHang entity)
		{
			this.SendPropertyChanging();
			entity.GioHang = this;
		}
		
		private void detach_ChiTietGioHangs(ChiTietGioHang entity)
		{
			this.SendPropertyChanging();
			entity.GioHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDonBanHang")]
	public partial class HoaDonBanHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaHoaDon;
		
		private System.Nullable<int> _MaKH;
		
		private System.Nullable<int> _MaNV;
		
		private System.DateTime _NgayLap;
		
		private decimal _TongTien;
		
		private string _MaGG;
		
		private string _TrangThai;
		
		private string _PhuongThucThanhToan;
		
		private string _DiaChiGiaoHang;
		
		private string _HoTenKH;
		
		private string _SdtGiaoHang;
		
		private EntitySet<ChiTietHoaDonBanHang> _ChiTietHoaDonBanHangs;
		
		private EntityRef<GiamGia> _GiamGia;
		
		private EntityRef<NguoiDung> _NguoiDung;
		
		private EntityRef<NguoiDung> _NguoiDung1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoaDonChanging(string value);
    partial void OnMaHoaDonChanged();
    partial void OnMaKHChanging(System.Nullable<int> value);
    partial void OnMaKHChanged();
    partial void OnMaNVChanging(System.Nullable<int> value);
    partial void OnMaNVChanged();
    partial void OnNgayLapChanging(System.DateTime value);
    partial void OnNgayLapChanged();
    partial void OnTongTienChanging(decimal value);
    partial void OnTongTienChanged();
    partial void OnMaGGChanging(string value);
    partial void OnMaGGChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnPhuongThucThanhToanChanging(string value);
    partial void OnPhuongThucThanhToanChanged();
    partial void OnDiaChiGiaoHangChanging(string value);
    partial void OnDiaChiGiaoHangChanged();
    partial void OnHoTenKHChanging(string value);
    partial void OnHoTenKHChanged();
    partial void OnSdtGiaoHangChanging(string value);
    partial void OnSdtGiaoHangChanged();
    #endregion
		
		public HoaDonBanHang()
		{
			this._ChiTietHoaDonBanHangs = new EntitySet<ChiTietHoaDonBanHang>(new Action<ChiTietHoaDonBanHang>(this.attach_ChiTietHoaDonBanHangs), new Action<ChiTietHoaDonBanHang>(this.detach_ChiTietHoaDonBanHangs));
			this._GiamGia = default(EntityRef<GiamGia>);
			this._NguoiDung = default(EntityRef<NguoiDung>);
			this._NguoiDung1 = default(EntityRef<NguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int")]
		public System.Nullable<int> MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._NguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int")]
		public System.Nullable<int> MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._NguoiDung1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date NOT NULL")]
		public System.DateTime NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Decimal(10,2) NOT NULL")]
		public decimal TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaGG", DbType="Char(10)")]
		public string MaGG
		{
			get
			{
				return this._MaGG;
			}
			set
			{
				if ((this._MaGG != value))
				{
					if (this._GiamGia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaGGChanging(value);
					this.SendPropertyChanging();
					this._MaGG = value;
					this.SendPropertyChanged("MaGG");
					this.OnMaGGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhuongThucThanhToan", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PhuongThucThanhToan
		{
			get
			{
				return this._PhuongThucThanhToan;
			}
			set
			{
				if ((this._PhuongThucThanhToan != value))
				{
					this.OnPhuongThucThanhToanChanging(value);
					this.SendPropertyChanging();
					this._PhuongThucThanhToan = value;
					this.SendPropertyChanged("PhuongThucThanhToan");
					this.OnPhuongThucThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiGiaoHang", DbType="NVarChar(100)")]
		public string DiaChiGiaoHang
		{
			get
			{
				return this._DiaChiGiaoHang;
			}
			set
			{
				if ((this._DiaChiGiaoHang != value))
				{
					this.OnDiaChiGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._DiaChiGiaoHang = value;
					this.SendPropertyChanged("DiaChiGiaoHang");
					this.OnDiaChiGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenKH", DbType="NVarChar(100)")]
		public string HoTenKH
		{
			get
			{
				return this._HoTenKH;
			}
			set
			{
				if ((this._HoTenKH != value))
				{
					this.OnHoTenKHChanging(value);
					this.SendPropertyChanging();
					this._HoTenKH = value;
					this.SendPropertyChanged("HoTenKH");
					this.OnHoTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SdtGiaoHang", DbType="NVarChar(100)")]
		public string SdtGiaoHang
		{
			get
			{
				return this._SdtGiaoHang;
			}
			set
			{
				if ((this._SdtGiaoHang != value))
				{
					this.OnSdtGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._SdtGiaoHang = value;
					this.SendPropertyChanged("SdtGiaoHang");
					this.OnSdtGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDonBanHang_ChiTietHoaDonBanHang", Storage="_ChiTietHoaDonBanHangs", ThisKey="MaHoaDon", OtherKey="MaHoaDon")]
		public EntitySet<ChiTietHoaDonBanHang> ChiTietHoaDonBanHangs
		{
			get
			{
				return this._ChiTietHoaDonBanHangs;
			}
			set
			{
				this._ChiTietHoaDonBanHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GiamGia_HoaDonBanHang", Storage="_GiamGia", ThisKey="MaGG", OtherKey="MaGG", IsForeignKey=true, DeleteRule="SET NULL")]
		public GiamGia GiamGia
		{
			get
			{
				return this._GiamGia.Entity;
			}
			set
			{
				GiamGia previousValue = this._GiamGia.Entity;
				if (((previousValue != value) 
							|| (this._GiamGia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GiamGia.Entity = null;
						previousValue.HoaDonBanHangs.Remove(this);
					}
					this._GiamGia.Entity = value;
					if ((value != null))
					{
						value.HoaDonBanHangs.Add(this);
						this._MaGG = value.MaGG;
					}
					else
					{
						this._MaGG = default(string);
					}
					this.SendPropertyChanged("GiamGia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_HoaDonBanHang", Storage="_NguoiDung", ThisKey="MaKH", OtherKey="MaNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung
		{
			get
			{
				return this._NguoiDung.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung.Entity = null;
						previousValue.HoaDonBanHangs.Remove(this);
					}
					this._NguoiDung.Entity = value;
					if ((value != null))
					{
						value.HoaDonBanHangs.Add(this);
						this._MaKH = value.MaNguoiDung;
					}
					else
					{
						this._MaKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguoiDung");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_HoaDonBanHang1", Storage="_NguoiDung1", ThisKey="MaNV", OtherKey="MaNguoiDung", IsForeignKey=true)]
		public NguoiDung NguoiDung1
		{
			get
			{
				return this._NguoiDung1.Entity;
			}
			set
			{
				NguoiDung previousValue = this._NguoiDung1.Entity;
				if (((previousValue != value) 
							|| (this._NguoiDung1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NguoiDung1.Entity = null;
						previousValue.HoaDonBanHangs1.Remove(this);
					}
					this._NguoiDung1.Entity = value;
					if ((value != null))
					{
						value.HoaDonBanHangs1.Add(this);
						this._MaNV = value.MaNguoiDung;
					}
					else
					{
						this._MaNV = default(Nullable<int>);
					}
					this.SendPropertyChanged("NguoiDung1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietHoaDonBanHangs(ChiTietHoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonBanHang = this;
		}
		
		private void detach_ChiTietHoaDonBanHangs(ChiTietHoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.HoaDonBanHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiSanPham")]
	public partial class LoaiSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiSP;
		
		private string _TenLoaiSP;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiSPChanging(string value);
    partial void OnMaLoaiSPChanged();
    partial void OnTenLoaiSPChanging(string value);
    partial void OnTenLoaiSPChanged();
    #endregion
		
		public LoaiSanPham()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiSP", DbType="NVarChar(100)")]
		public string TenLoaiSP
		{
			get
			{
				return this._TenLoaiSP;
			}
			set
			{
				if ((this._TenLoaiSP != value))
				{
					this.OnTenLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiSP = value;
					this.SendPropertyChanged("TenLoaiSP");
					this.OnTenLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_SanPhams", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.LoaiSanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNguoiDung;
		
		private string _HoTen;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _MatKhau;
		
		private string _MaQuyen;
		
		private EntitySet<GioHang> _GioHangs;
		
		private EntitySet<HoaDonBanHang> _HoaDonBanHangs;
		
		private EntitySet<HoaDonBanHang> _HoaDonBanHangs1;
		
		private EntityRef<PhanQuyen> _PhanQuyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNguoiDungChanging(int value);
    partial void OnMaNguoiDungChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnMaQuyenChanging(string value);
    partial void OnMaQuyenChanged();
    #endregion
		
		public NguoiDung()
		{
			this._GioHangs = new EntitySet<GioHang>(new Action<GioHang>(this.attach_GioHangs), new Action<GioHang>(this.detach_GioHangs));
			this._HoaDonBanHangs = new EntitySet<HoaDonBanHang>(new Action<HoaDonBanHang>(this.attach_HoaDonBanHangs), new Action<HoaDonBanHang>(this.detach_HoaDonBanHangs));
			this._HoaDonBanHangs1 = new EntitySet<HoaDonBanHang>(new Action<HoaDonBanHang>(this.attach_HoaDonBanHangs1), new Action<HoaDonBanHang>(this.detach_HoaDonBanHangs1));
			this._PhanQuyen = default(EntityRef<PhanQuyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNguoiDung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNguoiDung
		{
			get
			{
				return this._MaNguoiDung;
			}
			set
			{
				if ((this._MaNguoiDung != value))
				{
					this.OnMaNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._MaNguoiDung = value;
					this.SendPropertyChanged("MaNguoiDung");
					this.OnMaNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="Char(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuyen", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string MaQuyen
		{
			get
			{
				return this._MaQuyen;
			}
			set
			{
				if ((this._MaQuyen != value))
				{
					if (this._PhanQuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaQuyen = value;
					this.SendPropertyChanged("MaQuyen");
					this.OnMaQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_GioHang", Storage="_GioHangs", ThisKey="MaNguoiDung", OtherKey="MaNguoiDung")]
		public EntitySet<GioHang> GioHangs
		{
			get
			{
				return this._GioHangs;
			}
			set
			{
				this._GioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_HoaDonBanHang", Storage="_HoaDonBanHangs", ThisKey="MaNguoiDung", OtherKey="MaKH")]
		public EntitySet<HoaDonBanHang> HoaDonBanHangs
		{
			get
			{
				return this._HoaDonBanHangs;
			}
			set
			{
				this._HoaDonBanHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_HoaDonBanHang1", Storage="_HoaDonBanHangs1", ThisKey="MaNguoiDung", OtherKey="MaNV")]
		public EntitySet<HoaDonBanHang> HoaDonBanHangs1
		{
			get
			{
				return this._HoaDonBanHangs1;
			}
			set
			{
				this._HoaDonBanHangs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhanQuyen_NguoiDung", Storage="_PhanQuyen", ThisKey="MaQuyen", OtherKey="MaQuyen", IsForeignKey=true)]
		public PhanQuyen PhanQuyen
		{
			get
			{
				return this._PhanQuyen.Entity;
			}
			set
			{
				PhanQuyen previousValue = this._PhanQuyen.Entity;
				if (((previousValue != value) 
							|| (this._PhanQuyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PhanQuyen.Entity = null;
						previousValue.NguoiDungs.Remove(this);
					}
					this._PhanQuyen.Entity = value;
					if ((value != null))
					{
						value.NguoiDungs.Add(this);
						this._MaQuyen = value.MaQuyen;
					}
					else
					{
						this._MaQuyen = default(string);
					}
					this.SendPropertyChanged("PhanQuyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_HoaDonBanHangs(HoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = this;
		}
		
		private void detach_HoaDonBanHangs(HoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung = null;
		}
		
		private void attach_HoaDonBanHangs1(HoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung1 = this;
		}
		
		private void detach_HoaDonBanHangs1(HoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.NguoiDung1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhanQuyen")]
	public partial class PhanQuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaQuyen;
		
		private string _VaiTro;
		
		private EntitySet<NguoiDung> _NguoiDungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQuyenChanging(string value);
    partial void OnMaQuyenChanged();
    partial void OnVaiTroChanging(string value);
    partial void OnVaiTroChanged();
    #endregion
		
		public PhanQuyen()
		{
			this._NguoiDungs = new EntitySet<NguoiDung>(new Action<NguoiDung>(this.attach_NguoiDungs), new Action<NguoiDung>(this.detach_NguoiDungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuyen", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaQuyen
		{
			get
			{
				return this._MaQuyen;
			}
			set
			{
				if ((this._MaQuyen != value))
				{
					this.OnMaQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaQuyen = value;
					this.SendPropertyChanged("MaQuyen");
					this.OnMaQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VaiTro", DbType="NVarChar(10)")]
		public string VaiTro
		{
			get
			{
				return this._VaiTro;
			}
			set
			{
				if ((this._VaiTro != value))
				{
					this.OnVaiTroChanging(value);
					this.SendPropertyChanging();
					this._VaiTro = value;
					this.SendPropertyChanged("VaiTro");
					this.OnVaiTroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PhanQuyen_NguoiDung", Storage="_NguoiDungs", ThisKey="MaQuyen", OtherKey="MaQuyen")]
		public EntitySet<NguoiDung> NguoiDungs
		{
			get
			{
				return this._NguoiDungs;
			}
			set
			{
				this._NguoiDungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.PhanQuyen = this;
		}
		
		private void detach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.PhanQuyen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSanPham;
		
		private string _MaSize;
		
		private string _MaLoaiSP;
		
		private string _TenSanPham;
		
		private decimal _Gia;
		
		private string _MoTa;
		
		private string _HinhAnh;
		
		private System.Nullable<bool> _TrangThai;
		
		private int _SoLuong;
		
		private EntitySet<ChiTietGioHang> _ChiTietGioHangs;
		
		private EntitySet<ChiTietHoaDonBanHang> _ChiTietHoaDonBanHangs;
		
		private EntityRef<LoaiSanPham> _LoaiSanPham;
		
		private EntityRef<Size> _Size;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnMaSizeChanging(string value);
    partial void OnMaSizeChanged();
    partial void OnMaLoaiSPChanging(string value);
    partial void OnMaLoaiSPChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnGiaChanging(decimal value);
    partial void OnGiaChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    #endregion
		
		public SanPham()
		{
			this._ChiTietGioHangs = new EntitySet<ChiTietGioHang>(new Action<ChiTietGioHang>(this.attach_ChiTietGioHangs), new Action<ChiTietGioHang>(this.detach_ChiTietGioHangs));
			this._ChiTietHoaDonBanHangs = new EntitySet<ChiTietHoaDonBanHang>(new Action<ChiTietHoaDonBanHang>(this.attach_ChiTietHoaDonBanHangs), new Action<ChiTietHoaDonBanHang>(this.detach_ChiTietHoaDonBanHangs));
			this._LoaiSanPham = default(EntityRef<LoaiSanPham>);
			this._Size = default(EntityRef<Size>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSize", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSize
		{
			get
			{
				return this._MaSize;
			}
			set
			{
				if ((this._MaSize != value))
				{
					if (this._Size.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSizeChanging(value);
					this.SendPropertyChanging();
					this._MaSize = value;
					this.SendPropertyChanged("MaSize");
					this.OnMaSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiSP", DbType="Char(10)")]
		public string MaLoaiSP
		{
			get
			{
				return this._MaLoaiSP;
			}
			set
			{
				if ((this._MaLoaiSP != value))
				{
					if (this._LoaiSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiSPChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiSP = value;
					this.SendPropertyChanged("MaLoaiSP");
					this.OnMaLoaiSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(10,2) NOT NULL")]
		public decimal Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(255)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(50)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietGioHang", Storage="_ChiTietGioHangs", ThisKey="MaSanPham,MaSize", OtherKey="MaSanPham,MaSize")]
		public EntitySet<ChiTietGioHang> ChiTietGioHangs
		{
			get
			{
				return this._ChiTietGioHangs;
			}
			set
			{
				this._ChiTietGioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietHoaDonBanHang", Storage="_ChiTietHoaDonBanHangs", ThisKey="MaSanPham,MaSize", OtherKey="MaSanPham,MaSize")]
		public EntitySet<ChiTietHoaDonBanHang> ChiTietHoaDonBanHangs
		{
			get
			{
				return this._ChiTietHoaDonBanHangs;
			}
			set
			{
				this._ChiTietHoaDonBanHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiSanPham_SanPham", Storage="_LoaiSanPham", ThisKey="MaLoaiSP", OtherKey="MaLoaiSP", IsForeignKey=true)]
		public LoaiSanPham LoaiSanPham
		{
			get
			{
				return this._LoaiSanPham.Entity;
			}
			set
			{
				LoaiSanPham previousValue = this._LoaiSanPham.Entity;
				if (((previousValue != value) 
							|| (this._LoaiSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiSanPham.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._LoaiSanPham.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaLoaiSP = value.MaLoaiSP;
					}
					else
					{
						this._MaLoaiSP = default(string);
					}
					this.SendPropertyChanged("LoaiSanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Size_SanPham", Storage="_Size", ThisKey="MaSize", OtherKey="MaSize", IsForeignKey=true)]
		public Size Size
		{
			get
			{
				return this._Size.Entity;
			}
			set
			{
				Size previousValue = this._Size.Entity;
				if (((previousValue != value) 
							|| (this._Size.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Size.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._Size.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._MaSize = value.MaSize;
					}
					else
					{
						this._MaSize = default(string);
					}
					this.SendPropertyChanged("Size");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietGioHangs(ChiTietGioHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietGioHangs(ChiTietGioHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_ChiTietHoaDonBanHangs(ChiTietHoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietHoaDonBanHangs(ChiTietHoaDonBanHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Size")]
	public partial class Size : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSize;
		
		private string _TenSize;
		
		private EntitySet<ChiTietGioHang> _ChiTietGioHangs;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSizeChanging(string value);
    partial void OnMaSizeChanged();
    partial void OnTenSizeChanging(string value);
    partial void OnTenSizeChanged();
    #endregion
		
		public Size()
		{
			this._ChiTietGioHangs = new EntitySet<ChiTietGioHang>(new Action<ChiTietGioHang>(this.attach_ChiTietGioHangs), new Action<ChiTietGioHang>(this.detach_ChiTietGioHangs));
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSize", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSize
		{
			get
			{
				return this._MaSize;
			}
			set
			{
				if ((this._MaSize != value))
				{
					this.OnMaSizeChanging(value);
					this.SendPropertyChanging();
					this._MaSize = value;
					this.SendPropertyChanged("MaSize");
					this.OnMaSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSize", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenSize
		{
			get
			{
				return this._TenSize;
			}
			set
			{
				if ((this._TenSize != value))
				{
					this.OnTenSizeChanging(value);
					this.SendPropertyChanging();
					this._TenSize = value;
					this.SendPropertyChanged("TenSize");
					this.OnTenSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Size_ChiTietGioHang", Storage="_ChiTietGioHangs", ThisKey="MaSize", OtherKey="MaSize")]
		public EntitySet<ChiTietGioHang> ChiTietGioHangs
		{
			get
			{
				return this._ChiTietGioHangs;
			}
			set
			{
				this._ChiTietGioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Size_SanPham", Storage="_SanPhams", ThisKey="MaSize", OtherKey="MaSize")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietGioHangs(ChiTietGioHang entity)
		{
			this.SendPropertyChanging();
			entity.Size = this;
		}
		
		private void detach_ChiTietGioHangs(ChiTietGioHang entity)
		{
			this.SendPropertyChanging();
			entity.Size = null;
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.Size = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.Size = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Topping")]
	public partial class Topping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTopping;
		
		private string _TenTopping;
		
		private decimal _Gia;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntitySet<ToppingDonHang> _ToppingDonHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaToppingChanging(int value);
    partial void OnMaToppingChanged();
    partial void OnTenToppingChanging(string value);
    partial void OnTenToppingChanged();
    partial void OnGiaChanging(decimal value);
    partial void OnGiaChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public Topping()
		{
			this._ToppingDonHangs = new EntitySet<ToppingDonHang>(new Action<ToppingDonHang>(this.attach_ToppingDonHangs), new Action<ToppingDonHang>(this.detach_ToppingDonHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTopping", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTopping
		{
			get
			{
				return this._MaTopping;
			}
			set
			{
				if ((this._MaTopping != value))
				{
					this.OnMaToppingChanging(value);
					this.SendPropertyChanging();
					this._MaTopping = value;
					this.SendPropertyChanged("MaTopping");
					this.OnMaToppingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTopping", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenTopping
		{
			get
			{
				return this._TenTopping;
			}
			set
			{
				if ((this._TenTopping != value))
				{
					this.OnTenToppingChanging(value);
					this.SendPropertyChanging();
					this._TenTopping = value;
					this.SendPropertyChanged("TenTopping");
					this.OnTenToppingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(10,2) NOT NULL")]
		public decimal Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Topping_ToppingDonHang", Storage="_ToppingDonHangs", ThisKey="MaTopping", OtherKey="MaTopping")]
		public EntitySet<ToppingDonHang> ToppingDonHangs
		{
			get
			{
				return this._ToppingDonHangs;
			}
			set
			{
				this._ToppingDonHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ToppingDonHangs(ToppingDonHang entity)
		{
			this.SendPropertyChanging();
			entity.Topping = this;
		}
		
		private void detach_ToppingDonHangs(ToppingDonHang entity)
		{
			this.SendPropertyChanging();
			entity.Topping = null;
		}
	}
}
#pragma warning restore 1591
